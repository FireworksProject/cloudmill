* Usage

1. Install [[https://www.virtualbox.org/wiki/Downloads][VirtualBox 4.2.x]]
2. Install [[https://github.com/technomancy/leiningen][leiningen]]

3. To start a new virtualbox VM 

#+BEGIN_SRC sh
  lein run vbox start
#+END_SRC

6. To destroy the VM invoke:

#+BEGIN_SRC sh
  lein run vbox stop
#+END_SRC

NOTE: I will make the command-line interface for cloudmill easier to
use in the future

* Caveats

** Linux Distribution

Pallet uses a library called [[https://github.com/tbatchelli/vmfest][vmfest]] to manage VirtualBox VMs.
Currently, there is a limitation in vmfest that prevents us from using
whatever image we want. At the moment, we have to use [[https://s3.amazonaws.com/vmfest-images/debian-6.0.2.1-64bit-v0.3.vdi.gz][their provided
debian image]]. 

This doesn't cause us any trouble that I know of at them moment, and
they're working on a fix for it. So, I'm not worried about this
limitation.

** Immutable Disk Image

The disk image they provide for us is immutable. That means that if
the user "destroys" the VM instance, they'll have to completely
rebuild CouchDB next time they turn on the instance. This takes about
16 minutes on my macbook pro. So, this is painful if you want to set
up a dev environment quickly.

There are two solutions for this. 

1. We can create our own immutable disk image, based on their debian
   image, that has CouchDB installed.
2. We can share a folder from the host OS into the VM and make all our
   changes in the shared folder. This way changes are stored on the
   host machine durably. These changes can be used across multiple VM
   lifetimes by simply re-mounting the shared folder.

At the moment neither of these solutions are implemented.

